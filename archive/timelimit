#!/bin/bash

#timelimit - Set daily time limits for specific applications

#Licensed under the standard MIT license:
#Copyright 2013 Radu RÄƒdeanu (https://askubuntu.com/users/147044/).
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE

if [ $# -ne 1 ];then
    echo "Usage: `basename $0` APP_NAME"
    exit 1
fi

export DISPLAY=:0

app_name=$@
time_to_play_daily="2:30:00"  # channge as you wish; the format is: H[:M[:S]]
file="$HOME/.count_time_$app_name"

if [ -a $file ]; then
    if [ "$(head -1 $file)" != "$(date +%D)" ]; then
        echo $(date +%D) > $file
        echo $time_to_play_daily >> $file
    fi
else 
    touch $file
    echo $(date +%D) >> $file
    echo $time_to_play_daily >> $file
fi

time_to_play_left=$(sed -n '2p' $file)

sec_left=$(echo $time_to_play_left | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')

function countdown
{
    sec_left=$(echo $time_to_play_left | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')
    local start=$(date +%s)
    local end=$((start + sec_left))
    local cur=$start

    while [[ $cur -lt $end ]]; do
        pid=$(pgrep -x $app_name)
        if [ "$pid" != "" ]; then
            cur=$(date +%s)
            sec_left=$((end-cur))
            time_to_play_left="$((sec_left/3600)):$(((sec_left/60)%60)):$((sec_left%60))"
            sed -i "2s/.*/$time_to_play_left/" $file
            # next line is useful only when you test from terminal
            printf "\rTime left to play with %s: %02d:%02d:%02d" $app_name $((sec_left/3600)) $(((sec_left/60)%60)) $((sec_left%60))
            sleep 1
        else
            break
        fi
    done
}

while : ; do
    pid=$(pgrep -x $app_name)
    sleep 1
    if [ "$pid" != "" ]; then
        if [ $sec_left -gt 0 ]; then
            notify-send -i $app_name "Time left to play with $app_name for today: $time_to_play_left"
        else
            notify-send -i "error" "Your time to play with $app_name has finished for today!"
        fi
        countdown $time_to_play_left
        pid=$(pgrep -x $app_name)
        if [ "$pid" != "" ]; then kill $pid; fi
    fi
done
